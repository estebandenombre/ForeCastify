{"version":3,"sources":["metrics.js","ml.js","addtabla.js","funcionalidad.js","panel.js","pasarModeloID.js","pred.js","prueba.js"],"names":["allowDrop","event","preventDefault","drop","tableId","dataTransfer","getData","table","document","getElementById","target","appendChild","getTablaColumns","tablaSeleccionada","value","console","log","fetch","then","response","json","data","listaColumnas","innerHTML","columna","label","createElement","input","type","name","createTextNode","catch","error","opcion","text","add","toggleMarcarDesmarcar","checkboxes","querySelectorAll","marcarDesmarcarBtn","forEach","checkbox","checked","innerText","$","ready","btnaddTable","addEventListener","ok","style","backgroundImage","disabled","logoutLink","addGraLink","contenedor_aviso_cierre","classList","toggle","xhr","XMLHttpRequest","open","setRequestHeader","onload","window","location","href","send","movableWindow","setData","id","botonesCrearModelo","selecionarTablaPrediccion","querySelector","boton","tablaSelecionadaPrediccion","verSiguientePrediccion","remove","imprimirTabla","tablaId","ajax","url","method","success","html","alert","click","this","isDragging","offset","x","y","isMaximized","savedPosition","startDragging","e","clientX","getBoundingClientRect","left","clientY","top","minimizeWindow","maximizeWindow","width","height","closeWindow","items","item","otherItem","btnsEvaluar","btn","modeloID","getAttribute","btn1","btn2","btn3","btn4","info1","info2","info3","info4","crearModelo","tablaSelect","caracteristicasDiv","mostrarCaracteristicas","status","caracteristicas","JSON","parse","responseText","htmlCaracteristicas","caracteristica"],"mappings":"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","file":"bundle.js","sourcesContent":["function allowDrop(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nfunction drop(event) {\r\n    event.preventDefault();\r\n    const tableId = event.dataTransfer.getData(\"text\");\r\n    const table = document.getElementById(tableId);\r\n    event.target.appendChild(table);\r\n}\r\n\r\ndocument.addEventListener(\"dragstart\", function(event) {\r\n    event.dataTransfer.setData(\"text\", event.target.id);\r\n});\r\n","\r\nfunction getTablaColumns() {\r\n    const tablaSeleccionada = document.getElementById(\"lista_opciones1\").value;\r\n    console.log(tablaSeleccionada);\r\n\r\n    // Realizar una solicitud AJAX al servidor para obtener las columnas de la tabla seleccionada\r\n    // Puedes utilizar JavaScript puro o una biblioteca como jQuery para realizar la solicitud\r\n    // AquÃ­ se muestra un ejemplo utilizando fetch (JavaScript moderno)\r\n    fetch('get_tabla_columns.php?tabla=' + tablaSeleccionada)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // Llenar la lista de columnas con los datos obtenidos\r\n            const listaColumnas = document.getElementById(\"columnasTabla\");\r\n            listaColumnas.innerHTML = \"\";\r\n\r\n            for (const columna of data) {\r\n                const label = document.createElement(\"label\");\r\n                const input = document.createElement(\"input\");\r\n                input.type = \"checkbox\";\r\n                input.name = \"columnas[]\";\r\n                input.value = columna;\r\n                label.appendChild(input);\r\n                label.appendChild(document.createTextNode(columna));\r\n                listaColumnas.appendChild(label);\r\n                \r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error al obtener las columnas:', error);\r\n        });\r\n        fetch('get_tabla_columns.php?tabla=' + tablaSeleccionada)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // Llenar la lista de columnas con los datos obtenidos\r\n            const listaColumnas = document.getElementById(\"lista_opciones2\");\r\n            listaColumnas.innerHTML = \"\";\r\n\r\n            for (const columna of data) {\r\n                const opcion = document.createElement(\"option\");\r\n                opcion.text = columna;\r\n                opcion.value = columna;\r\n                listaColumnas.add(opcion);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error al obtener las columnas:', error);\r\n        });    \r\n}\r\n\r\nfunction toggleMarcarDesmarcar() {\r\n    const checkboxes = document.querySelectorAll(\"#columnasTabla input[type='checkbox']\");\r\n    const marcarDesmarcarBtn = document.getElementById(\"marcarDesmarcar\");\r\n\r\n    checkboxes.forEach(checkbox => {\r\n        checkbox.checked = !checkbox.checked;\r\n    });\r\n\r\n    marcarDesmarcarBtn.innerText = checkboxes[0].checked ? \"Desmarcar Todo\" : \"Marcar Todo\";\r\n}\r\n      \r\nconst botonesCrearModelo = document.querySelectorAll(\".btnEvaluar\");\r\nbotonesCrearModelo.forEach((boton) => {\r\n    boton.addEventListener(\"click\", selecionarTablaPrediccion);\r\n});\r\nfunction selecionarTablaPrediccion(event) {\r\n    event.preventDefault();\r\n\r\n    const contenedor_cargar = document.querySelector(\".contenedor_cargar\");\r\n    contenedor_cargar.classList.toggle('ocultar');\r\n\r\n    const contenedor_tabla_evaluar = document.querySelector(\".contenedor_tabla_evaluar\");\r\n   \r\n    contenedor_tabla_evaluar.classList.toggle('ocultar');\r\n}  \r\nconst tablaSelecionadaPrediccion = document.querySelectorAll(\".tablaSelecionadaPrediccion\");\r\ntablaSelecionadaPrediccion.forEach((boton) => {\r\n    boton.addEventListener(\"click\", verSiguientePrediccion);\r\n  });\r\nfunction verSiguientePrediccion(event) {\r\n    event.preventDefault();\r\n\r\n    const btn_siguientePrediccion = document.querySelector(\".btn_siguientePrediccion\");\r\n   \r\n    btn_siguientePrediccion.classList.remove(\"ocultar\");\r\n}  \r\n\r\n  ","$(document).ready(function() {\r\n    const btnaddTable = document.getElementById(\"btn-add-Table\");\r\n    btnaddTable.addEventListener(\"click\", addTabla);\r\n    function addTabla(event) {\r\n        event.preventDefault();\r\n        \r\n       \r\n        // Hacemos una solicitud GET al archivo PHP\r\n        fetch('../../aÃ±adirTablaPredicciones.php')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                console.log('Archivo PHP ejecutado correctamente.');\r\n            } else {\r\n                console.error('Error al ejecutar el archivo PHP.');\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error en la solicitud:', error);\r\n        });\r\n        btnaddTable.style.backgroundImage = \"url(../../build/img/garrapata.png)\";\r\n        btnaddTable.disabled = true;\r\n        \r\n    }\r\n});","document.addEventListener(\"DOMContentLoaded\", function() {\r\n  const logoutLink = document.getElementById(\"logout-link\");\r\n  const addGraLink = document.getElementById(\"addGraLink\");\r\n \r\n  logoutLink.addEventListener(\"click\", confirmLogout);\r\n  addGraLink.addEventListener(\"click\", addGrafica);\r\n\r\n\r\n  const btn_add_modelo = document.getElementById(\"btn_add_modelo\");\r\n  btn_add_modelo.addEventListener(\"click\", crearModelo);\r\n\r\n  function confirmLogout(event) {\r\n      event.preventDefault();\r\n\r\n      const contenedor_aviso_cierre = document.getElementById(\"contenedor_aviso_cierre\");\r\n      contenedor_aviso_cierre.classList.toggle('ocultar');\r\n      // Agregar evento al botÃ³n \"Cancelar\" para cerrar el aviso\r\n      const cancelButton = document.getElementById(\"cancel-button\");\r\n      cancelButton.addEventListener(\"click\", function() {\r\n        contenedor_aviso_cierre.classList.toggle('ocultar');\r\n      });\r\n\r\n      // Agregar evento al botÃ³n \"Confirmar\" para cerrar la sesiÃ³n\r\n      const confirmButton = document.getElementById(\"confirm-button\");\r\n      confirmButton.addEventListener(\"click\", function() {\r\n          // Enviar solicitud AJAX al archivo \"logout.php\"\r\n          const xhr = new XMLHttpRequest();\r\n          xhr.open(\"POST\", \"../../logout.php\", true);\r\n          xhr.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n          xhr.onload = function() {\r\n              // Redireccionar al usuario despuÃ©s de cerrar la sesiÃ³n\r\n              window.location.href = \"../../index.php\"; // O cualquier otra pÃ¡gina\r\n          };\r\n          xhr.send();\r\n      });\r\n  }\r\n  function addGrafica(event) {\r\n    event.preventDefault();\r\n\r\n    \r\n    movableWindow.classList.toggle('ocultar');\r\n  }\r\n  function crearModelo(event) {\r\n    event.preventDefault();\r\n\r\n    const crearModelo = document.getElementById(\"crearModelo\");\r\n    \r\n    crearModelo.classList.toggle('ocultar');\r\n    \r\n    \r\n  }\r\n  \r\n  \r\n  \r\n});\r\n  ","$(document).ready(function() {\r\n  \r\n  // Capturar el clic en una tabla de la lista\r\n  $(\".lista-tablas li\").click(function() {\r\n    const tablaId = $(this).data(\"tabla-id\");\r\n    console.log(tablaId);\r\n    imprimirTabla(tablaId);\r\n  });\r\n  \r\n  \r\n});\r\n\r\n// FunciÃ³n para imprimir el contenido de la tabla seleccionada\r\nfunction imprimirTabla(tablaId) {\r\n  $.ajax({\r\n    url: \"../../obtener_contenido_tabla.php\",\r\n    method: \"POST\",\r\n    data: { tablaId: tablaId },\r\n    success: function(data) {\r\n      $(\"#tabla-contenedor\").html(data);\r\n    },\r\n    error: function() {\r\n      alert(\"Error al obtener el contenido de la tabla.\");\r\n    }\r\n  });\r\n  \r\n}\r\n\r\n\r\n  const movableWindow = document.getElementById('movableWindow');\r\n  let isDragging = false;\r\n  let offset = { x: 0, y: 0 };\r\n  let isMaximized = false;\r\n  let savedPosition = {};\r\n  \r\n  \r\n  function startDragging(e) {\r\n    isDragging = true;\r\n    offset.x = e.clientX - movableWindow.getBoundingClientRect().left;\r\n    offset.y = e.clientY - movableWindow.getBoundingClientRect().top;\r\n  }\r\n  \r\n  document.addEventListener('mousemove', (e) => {\r\n    if (isDragging && !isMaximized) {\r\n      movableWindow.style.left = (e.clientX - offset.x) + 'px';\r\n      movableWindow.style.top = (e.clientY - offset.y) + 'px';\r\n    }\r\n  });\r\n  \r\n  document.addEventListener('mouseup', () => {\r\n    isDragging = false;\r\n  });\r\n  \r\n  function minimizeWindow() {\r\n    movableWindow.classList.toggle('ocultar');\r\n  }\r\n  \r\n  function maximizeWindow() {\r\n    if (isMaximized) {\r\n      // Restore the window to its previous position\r\n      movableWindow.style.left = savedPosition.left;\r\n      movableWindow.style.top = savedPosition.top;\r\n      movableWindow.style.width = savedPosition.width;\r\n      movableWindow.style.height = savedPosition.height;\r\n      isMaximized = false;\r\n    } else {\r\n      // Maximize the window and save its current position\r\n      savedPosition.left = movableWindow.style.left;\r\n      savedPosition.top = movableWindow.style.top;\r\n      savedPosition.width = movableWindow.style.width;\r\n      savedPosition.height = movableWindow.style.height;\r\n      movableWindow.style.left = '0';\r\n      movableWindow.style.top = '0';\r\n      movableWindow.style.width = '100%';\r\n      movableWindow.style.height = '100%';\r\n      isMaximized = true;\r\n      \r\n    }\r\n  }\r\n  \r\n  function closeWindow() {\r\n    movableWindow.classList.toggle('ocultar');\r\n  }\r\n\r\n  const items = document.querySelectorAll('.item');\r\n\r\n  items.forEach(item => {\r\n    item.addEventListener('click', () => {\r\n      // Remove 'selected' class from all items\r\n      items.forEach(otherItem => {\r\n        otherItem.classList.remove('selected');\r\n      });\r\n  \r\n      // Add 'selected' class to clicked item\r\n      item.classList.add('selected');\r\n    });\r\n  });\r\n    ","const btnsEvaluar = document.querySelectorAll('.btnEvaluar');\r\n\r\n// Agregar un evento de clic a cada botÃ³n EVALUAR\r\nbtnsEvaluar.forEach(btn => {\r\n    btn.addEventListener('click', () => {\r\n        // Obtener el ID del modelo desde el atributo data-modelo-id\r\n        const modeloID = btn.getAttribute('data-modelo-id');\r\n\r\n        // Realizar una redirecciÃ³n a Ejecucion_Prediccion.php con el ID del modelo como parÃ¡metro\r\n        window.location.href = `Ejecucion_Prediccion.php?modeloID=${modeloID}`;\r\n    });\r\n});","document.addEventListener(\"DOMContentLoaded\", function() {\r\n    const btn1 = document.getElementById(\"btn1\");\r\n    const btn2 = document.getElementById(\"btn2\");\r\n    const btn3 = document.getElementById(\"btn3\");\r\n    const btn4 = document.getElementById(\"btn4\");\r\n\r\n    const info1 = document.getElementById(\"info1\");\r\n    const info2 = document.getElementById(\"info2\");\r\n    const info3 = document.getElementById(\"info3\");\r\n    const info4 = document.getElementById(\"info4\");\r\n   \r\n   \r\n   \r\n   \r\n    btn1.addEventListener(\"click\", vinfo1);\r\n    btn2.addEventListener(\"click\", vinfo2);\r\n    btn3.addEventListener(\"click\", vinfo3);\r\n    btn4.addEventListener(\"click\", vinfo4);\r\n   \r\n  \r\n  \r\n    const btn_add_modelo = document.getElementById(\"btn_add_modelo\");\r\n    btn_add_modelo.addEventListener(\"click\", crearModelo);\r\n  \r\n    \r\n    function vinfo1(event) {\r\n      event.preventDefault();\r\n  \r\n      \r\n      info1.classList.toggle('ocultar');\r\n    }\r\n    function vinfo2(event) {\r\n      event.preventDefault();\r\n  \r\n      \r\n      info2.classList.toggle('ocultar');\r\n    }\r\n    function vinfo3(event) {\r\n      event.preventDefault();\r\n  \r\n      \r\n      info3.classList.toggle('ocultar');\r\n    }\r\n    function vinfo4(event) {\r\n      event.preventDefault();\r\n  \r\n      \r\n      info4.classList.toggle('ocultar');\r\n    }\r\n   \r\n    \r\n    \r\n    \r\n  });","// Obtener el select de la tabla y el div para las caracterÃ­sticas\r\nconst tablaSelect = document.getElementById(\"tabla\");\r\nconst caracteristicasDiv = document.getElementById(\"caracteristicas\");\r\n\r\n\r\n// FunciÃ³n para mostrar las caracterÃ­sticas de la tabla seleccionada\r\nfunction mostrarCaracteristicas() {\r\n    const tablaSeleccionada = tablaSelect.value;\r\n\r\n    // Realizar una peticiÃ³n AJAX para obtener las caracterÃ­sticas de la tabla seleccionada\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", \"../../ML2.php?tabla=\" + tablaSeleccionada, true);\r\n    xhr.onload = function() {\r\n        if (xhr.status === 200) {\r\n            const caracteristicas = JSON.parse(xhr.responseText);\r\n\r\n            // Construir el HTML para mostrar las caracterÃ­sticas\r\n            let htmlCaracteristicas = \"\";\r\n            caracteristicas.forEach(caracteristica => {\r\n                htmlCaracteristicas += \"<label>\";\r\n                htmlCaracteristicas += \"<input type='checkbox' name='caracteristicas[]' value='\" + caracteristica + \"'>\";\r\n                htmlCaracteristicas += caracteristica;\r\n                htmlCaracteristicas += \"</label>\";\r\n            });\r\n\r\n            // Insertar el HTML en el div de las caracterÃ­sticas\r\n            caracteristicasDiv.innerHTML = htmlCaracteristicas;\r\n        }\r\n    };\r\n    xhr.send();\r\n}\r\n\r\n// Agregar el evento change al select de la tabla para que se muestren las caracterÃ­sticas\r\ntablaSelect.addEventListener(\"change\", mostrarCaracteristicas);\r\n\r\n// Mostrar las caracterÃ­sticas inicialmente si hay una tabla seleccionada\r\nif (tablaSelect.value !== \"\") {\r\n    mostrarCaracteristicas();\r\n}"]}